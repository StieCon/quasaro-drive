//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuasaroDRV.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("QuasaroDRV.Properties.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All rights reserved. ähnelt.
        /// </summary>
        public static string AboutWindowAllRightsReservedTitle {
            get {
                return ResourceManager.GetString("AboutWindowAllRightsReservedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copyright ©  {COPYRIGHTYEAR} {VENDORNAME}. ähnelt.
        /// </summary>
        public static string AboutWindowCopyrightTitleBrandable {
            get {
                return ResourceManager.GetString("AboutWindowCopyrightTitleBrandable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die DeviceID: ähnelt.
        /// </summary>
        public static string AboutWindowDeviceIdTitle {
            get {
                return ResourceManager.GetString("AboutWindowDeviceIdTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die About ähnelt.
        /// </summary>
        public static string AboutWindowTitle {
            get {
                return ResourceManager.GetString("AboutWindowTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Version: ähnelt.
        /// </summary>
        public static string AboutWindowVersionTitle {
            get {
                return ResourceManager.GetString("AboutWindowVersionTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die connect ähnelt.
        /// </summary>
        public static string ActionVerbConnect {
            get {
                return ResourceManager.GetString("ActionVerbConnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die disconnect ähnelt.
        /// </summary>
        public static string ActionVerbDisconnect {
            get {
                return ResourceManager.GetString("ActionVerbDisconnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die re-connect ähnelt.
        /// </summary>
        public static string ActionVerbReConnect {
            get {
                return ResourceManager.GetString("ActionVerbReConnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Advanced ähnelt.
        /// </summary>
        public static string AdvancedSettingsButtonTitle {
            get {
                return ResourceManager.GetString("AdvancedSettingsButtonTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show button to open log file ähnelt.
        /// </summary>
        public static string AdvancedSettingsEnableShowLogMenu {
            get {
                return ResourceManager.GetString("AdvancedSettingsEnableShowLogMenu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Preload main window ähnelt.
        /// </summary>
        public static string AdvancedSettingsPreloadMainWindow {
            get {
                return ResourceManager.GetString("AdvancedSettingsPreloadMainWindow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show &quot;Restart WebClient service&quot; button in main menu ähnelt.
        /// </summary>
        public static string AdvancedSettingsRestartWebClientButton {
            get {
                return ResourceManager.GetString("AdvancedSettingsRestartWebClientButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use fast WebDAV checking for connectivity ähnelt.
        /// </summary>
        public static string AdvancedSettingsUseFastWebDavCheck {
            get {
                return ResourceManager.GetString("AdvancedSettingsUseFastWebDavCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use Windows API calls instead of CLI ähnelt.
        /// </summary>
        public static string AdvancedSettingsUseWindowsApi {
            get {
                return ResourceManager.GetString("AdvancedSettingsUseWindowsApi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Advanced Settings ähnelt.
        /// </summary>
        public static string AdvancedSettingsWindowTitle {
            get {
                return ResourceManager.GetString("AdvancedSettingsWindowTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Update now ähnelt.
        /// </summary>
        public static string AutoUpdateButtonUpdateNowTitle {
            get {
                return ResourceManager.GetString("AutoUpdateButtonUpdateNowTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Could not reach the update server. ähnelt.
        /// </summary>
        public static string AutoUpdateCouldNotReachServerMessage {
            get {
                return ResourceManager.GetString("AutoUpdateCouldNotReachServerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Download complete. Install now? ähnelt.
        /// </summary>
        public static string AutoUpdateDownloadCompleteMessage {
            get {
                return ResourceManager.GetString("AutoUpdateDownloadCompleteMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error while updating ({0}):
        ///
        ///{1} ähnelt.
        /// </summary>
        public static string AutoUpdateErrorMessage {
            get {
                return ResourceManager.GetString("AutoUpdateErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The update server returned an invalid response. ähnelt.
        /// </summary>
        public static string AutoUpdateInvalidResponseMessage {
            get {
                return ResourceManager.GetString("AutoUpdateInvalidResponseMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Could not receive from &quot;{0}&quot; ({1}):
        ///
        ///{2} ähnelt.
        /// </summary>
        public static string AutoUpdateReceiveErrorMessage {
            get {
                return ResourceManager.GetString("AutoUpdateReceiveErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {APPNAME} Update ähnelt.
        /// </summary>
        public static string AutoUpdateTitleBrandable {
            get {
                return ResourceManager.GetString("AutoUpdateTitleBrandable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {APPNAME} Version {0} is available. Would you like to update now? ähnelt.
        /// </summary>
        public static string AutoUpdateUpdateToVersionMessageBrandable {
            get {
                return ResourceManager.GetString("AutoUpdateUpdateToVersionMessageBrandable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your {APPNAME} Software is already up to date. ähnelt.
        /// </summary>
        public static string AutoUpdateUpToDateMessageBrandable {
            get {
                return ResourceManager.GetString("AutoUpdateUpToDateMessageBrandable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Abort ähnelt.
        /// </summary>
        public static string ButtonAbortTitle {
            get {
                return ResourceManager.GetString("ButtonAbortTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cancel ähnelt.
        /// </summary>
        public static string ButtonCancelTitle {
            get {
                return ResourceManager.GetString("ButtonCancelTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Close ähnelt.
        /// </summary>
        public static string ButtonCloseTitle {
            get {
                return ResourceManager.GetString("ButtonCloseTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die OK ähnelt.
        /// </summary>
        public static string ButtonOkayTitle {
            get {
                return ResourceManager.GetString("ButtonOkayTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please enter your credentials for &quot;{0}&quot;: ähnelt.
        /// </summary>
        public static string CredentialsWindowEnterCredentialsForDomainText {
            get {
                return ResourceManager.GetString("CredentialsWindowEnterCredentialsForDomainText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please enter your credentials below: ähnelt.
        /// </summary>
        public static string CredentialsWindowEnterCredentialsText {
            get {
                return ResourceManager.GetString("CredentialsWindowEnterCredentialsText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Password ähnelt.
        /// </summary>
        public static string CredentialsWindowPasswordTitle {
            get {
                return ResourceManager.GetString("CredentialsWindowPasswordTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Login failed after {1} tries. Please re-enter your credentials for &quot;{0}&quot;: ähnelt.
        /// </summary>
        public static string CredentialsWindowReEnterAfterFailDescription {
            get {
                return ResourceManager.GetString("CredentialsWindowReEnterAfterFailDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Credentials ähnelt.
        /// </summary>
        public static string CredentialsWindowTitle {
            get {
                return ResourceManager.GetString("CredentialsWindowTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Username ähnelt.
        /// </summary>
        public static string CredentialsWindowUserNameTitle {
            get {
                return ResourceManager.GetString("CredentialsWindowUserNameTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Credits ähnelt.
        /// </summary>
        public static string CreditsWindowTitle {
            get {
                return ResourceManager.GetString("CreditsWindowTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check ähnelt.
        /// </summary>
        public static string DriveWindowButtonCheckTitle {
            get {
                return ResourceManager.GetString("DriveWindowButtonCheckTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Connect on login ähnelt.
        /// </summary>
        public static string DriveWindowConnectOnLogin {
            get {
                return ResourceManager.GetString("DriveWindowConnectOnLogin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Drive label ähnelt.
        /// </summary>
        public static string DriveWindowDriveLabelTitle {
            get {
                return ResourceManager.GetString("DriveWindowDriveLabelTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Local drive letter ähnelt.
        /// </summary>
        public static string DriveWindowDriveLetterTitle {
            get {
                return ResourceManager.GetString("DriveWindowDriveLetterTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please enter a name for your drive. ähnelt.
        /// </summary>
        public static string DriveWindowEnterDriveLabelMessage {
            get {
                return ResourceManager.GetString("DriveWindowEnterDriveLabelMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please enter a remote address. ähnelt.
        /// </summary>
        public static string DriveWindowEnterRemoteAddressMessage {
            get {
                return ResourceManager.GetString("DriveWindowEnterRemoteAddressMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Username or Password are not specified. A connection to this drive might fail. ähnelt.
        /// </summary>
        public static string DriveWindowNoCredentialsMessage {
            get {
                return ResourceManager.GetString("DriveWindowNoCredentialsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Password ähnelt.
        /// </summary>
        public static string DriveWindowPasswordTitle {
            get {
                return ResourceManager.GetString("DriveWindowPasswordTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remote address ähnelt.
        /// </summary>
        public static string DriveWindowRemoteAddressTitle {
            get {
                return ResourceManager.GetString("DriveWindowRemoteAddressTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please select a drive letter. ähnelt.
        /// </summary>
        public static string DriveWindowSelectDriveLetterMessage {
            get {
                return ResourceManager.GetString("DriveWindowSelectDriveLetterMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Username ähnelt.
        /// </summary>
        public static string DriveWindowUserNameTitle {
            get {
                return ResourceManager.GetString("DriveWindowUserNameTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter password ähnelt.
        /// </summary>
        public static string EnterPasswordDialogTitle {
            get {
                return ResourceManager.GetString("EnterPasswordDialogTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unable to retrieve disk information for {0} while setting drive label. ähnelt.
        /// </summary>
        public static string ExceptionDiskNotFound {
            get {
                return ResourceManager.GetString("ExceptionDiskNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The drive label contains invalid characters. ähnelt.
        /// </summary>
        public static string ExceptionDriveLabelInvalid {
            get {
                return ResourceManager.GetString("ExceptionDriveLabelInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The local drive letter may only be succeeded by a &quot;:&quot;-character. ähnelt.
        /// </summary>
        public static string ExceptionDriveLetterFormat {
            get {
                return ResourceManager.GetString("ExceptionDriveLetterFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The local drive letter must be set first. ähnelt.
        /// </summary>
        public static string ExceptionDriveLetterNotSet {
            get {
                return ResourceManager.GetString("ExceptionDriveLetterNotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The local drive letter must begin with a letter from A to Z. ähnelt.
        /// </summary>
        public static string ExceptionDriveLetterOutOfRange {
            get {
                return ResourceManager.GetString("ExceptionDriveLetterOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Connection was not established after {0} seconds. ähnelt.
        /// </summary>
        public static string ExceptionNetworkDriveConnectionTimedOut {
            get {
                return ResourceManager.GetString("ExceptionNetworkDriveConnectionTimedOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Drive was not disconnected after {0} seconds. ähnelt.
        /// </summary>
        public static string ExceptionNetworkDriveDisconnectionTimedOut {
            get {
                return ResourceManager.GetString("ExceptionNetworkDriveDisconnectionTimedOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The NetworkDrive {0} is currently locked. ähnelt.
        /// </summary>
        public static string ExceptionNetworkDriveLockedMessage {
            get {
                return ResourceManager.GetString("ExceptionNetworkDriveLockedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die API-Error while receiving authorization data: {0} ähnelt.
        /// </summary>
        public static string ExceptionReceiveAuthApiErrorMessage {
            get {
                return ResourceManager.GetString("ExceptionReceiveAuthApiErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The remote address must be set first. ähnelt.
        /// </summary>
        public static string ExceptionRemoteAddressNotSet {
            get {
                return ResourceManager.GetString("ExceptionRemoteAddressNotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Another static instance of LoadingWindow is already in use. ähnelt.
        /// </summary>
        public static string ExceptionStaticLoadingWindowExists {
            get {
                return ResourceManager.GetString("ExceptionStaticLoadingWindowExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Password ähnelt.
        /// </summary>
        public static string ExportWindowEncryptionPassword {
            get {
                return ResourceManager.GetString("ExportWindowEncryptionPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Repeat password ähnelt.
        /// </summary>
        public static string ExportWindowEncryptionPasswordRepeat {
            get {
                return ResourceManager.GetString("ExportWindowEncryptionPasswordRepeat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please enter a password or disable encryption. ähnelt.
        /// </summary>
        public static string ExportWindowNoPasswordMessage {
            get {
                return ResourceManager.GetString("ExportWindowNoPasswordMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Exporting passwords without encryption is not allowed. ähnelt.
        /// </summary>
        public static string ExportWindowPasswordWithoutEncryptionMessage {
            get {
                return ResourceManager.GetString("ExportWindowPasswordWithoutEncryptionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Exported properties ähnelt.
        /// </summary>
        public static string ExportWindowPropertiesTitle {
            get {
                return ResourceManager.GetString("ExportWindowPropertiesTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Password ähnelt.
        /// </summary>
        public static string ExportWindowPropertyPassword {
            get {
                return ResourceManager.GetString("ExportWindowPropertyPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Username ähnelt.
        /// </summary>
        public static string ExportWindowPropertyUsername {
            get {
                return ResourceManager.GetString("ExportWindowPropertyUsername", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Export drives ähnelt.
        /// </summary>
        public static string ExportWindowTitle {
            get {
                return ResourceManager.GetString("ExportWindowTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use encryption ähnelt.
        /// </summary>
        public static string ExportWindowUseEncryptionTitle {
            get {
                return ResourceManager.GetString("ExportWindowUseEncryptionTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All domains ähnelt.
        /// </summary>
        public static string HintAllDomains {
            get {
                return ResourceManager.GetString("HintAllDomains", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please select drives to be configured: ähnelt.
        /// </summary>
        public static string InitialConfigWindowIntroText {
            get {
                return ResourceManager.GetString("InitialConfigWindowIntroText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Label: ähnelt.
        /// </summary>
        public static string InitialConfigWindowLabelTitle {
            get {
                return ResourceManager.GetString("InitialConfigWindowLabelTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please select different drive letters for the folders or deselect one of them. ähnelt.
        /// </summary>
        public static string InitialConfigWindowLettersConflictMessage {
            get {
                return ResourceManager.GetString("InitialConfigWindowLettersConflictMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please select a drive letter for all checked drives. ähnelt.
        /// </summary>
        public static string InitialConfigWindowMissingDriveLetterMessage {
            get {
                return ResourceManager.GetString("InitialConfigWindowMissingDriveLetterMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Do you really want to create no initial network drives? ähnelt.
        /// </summary>
        public static string InitialConfigWindowNoDrivesMessage {
            get {
                return ResourceManager.GetString("InitialConfigWindowNoDrivesMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Could not save network drives ({0}): {1} ähnelt.
        /// </summary>
        public static string InitialConfigWindowSaveErrorMessage {
            get {
                return ResourceManager.GetString("InitialConfigWindowSaveErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Do you really want to skip the automatic configuration? ähnelt.
        /// </summary>
        public static string InitialConfigWindowSkipConfigMessage {
            get {
                return ResourceManager.GetString("InitialConfigWindowSkipConfigMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {APPNAME} - Initial Configuration ähnelt.
        /// </summary>
        public static string InitialConfigWindowTitleBrandable {
            get {
                return ResourceManager.GetString("InitialConfigWindowTitleBrandable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Loading... Please wait ähnelt.
        /// </summary>
        public static string LoadingWindowTitle {
            get {
                return ResourceManager.GetString("LoadingWindowTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unable to {0} drive &quot;{1}&quot;: {2} ähnelt.
        /// </summary>
        public static string MainWindowActionFailedMessage {
            get {
                return ResourceManager.GetString("MainWindowActionFailedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Action was not performed for all drives. ähnelt.
        /// </summary>
        public static string MainWindowActionsPartiallyFailedMessage {
            get {
                return ResourceManager.GetString("MainWindowActionsPartiallyFailedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add network drive ähnelt.
        /// </summary>
        public static string MainWindowAddDriveDialogTitle {
            get {
                return ResourceManager.GetString("MainWindowAddDriveDialogTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add ähnelt.
        /// </summary>
        public static string MainWindowButtonAddDriveTitle {
            get {
                return ResourceManager.GetString("MainWindowButtonAddDriveTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Edit ähnelt.
        /// </summary>
        public static string MainWindowButtonEditDriveTitle {
            get {
                return ResourceManager.GetString("MainWindowButtonEditDriveTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die (Re-)connect all ähnelt.
        /// </summary>
        public static string MainWindowButtonReconnectAllTitle {
            get {
                return ResourceManager.GetString("MainWindowButtonReconnectAllTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove ähnelt.
        /// </summary>
        public static string MainWindowButtonRemoveDriveTitle {
            get {
                return ResourceManager.GetString("MainWindowButtonRemoveDriveTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Do want to disconnect the drives before removing? ähnelt.
        /// </summary>
        public static string MainWindowDisconnectBeforeRemoveMessage {
            get {
                return ResourceManager.GetString("MainWindowDisconnectBeforeRemoveMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Edit network drive ähnelt.
        /// </summary>
        public static string MainWindowEditDriveDialogTitle {
            get {
                return ResourceManager.GetString("MainWindowEditDriveDialogTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error exporting drives ({0}): {1} ähnelt.
        /// </summary>
        public static string MainWindowExportErrorMessage {
            get {
                return ResourceManager.GetString("MainWindowExportErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Exporting drives... ähnelt.
        /// </summary>
        public static string MainWindowExportProgressMessage {
            get {
                return ResourceManager.GetString("MainWindowExportProgressMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Credentials for &quot;{0}&quot; ähnelt.
        /// </summary>
        public static string MainWindowImportCredentialsForText {
            get {
                return ResourceManager.GetString("MainWindowImportCredentialsForText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Could not import drives ({0}): {1} ähnelt.
        /// </summary>
        public static string MainWindowImportErrorMessage {
            get {
                return ResourceManager.GetString("MainWindowImportErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please enter the password: ähnelt.
        /// </summary>
        public static string MainWindowImportPasswordMessage {
            get {
                return ResourceManager.GetString("MainWindowImportPasswordMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Importing drives... ähnelt.
        /// </summary>
        public static string MainWindowImportProgressMessage {
            get {
                return ResourceManager.GetString("MainWindowImportProgressMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Import drives ähnelt.
        /// </summary>
        public static string MainWindowImportTitle {
            get {
                return ResourceManager.GetString("MainWindowImportTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Connected ähnelt.
        /// </summary>
        public static string MainWindowListColumnConnectedTitle {
            get {
                return ResourceManager.GetString("MainWindowListColumnConnectedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Connect on startup ähnelt.
        /// </summary>
        public static string MainWindowListColumnConnectOnStartupTitle {
            get {
                return ResourceManager.GetString("MainWindowListColumnConnectOnStartupTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Credentials saved ähnelt.
        /// </summary>
        public static string MainWindowListColumnCredentialsSavedTitle {
            get {
                return ResourceManager.GetString("MainWindowListColumnCredentialsSavedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Drive label ähnelt.
        /// </summary>
        public static string MainWindowListColumnDriveLabelTitle {
            get {
                return ResourceManager.GetString("MainWindowListColumnDriveLabelTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Local drive letter ähnelt.
        /// </summary>
        public static string MainWindowListColumnDriveLetterTitle {
            get {
                return ResourceManager.GetString("MainWindowListColumnDriveLetterTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remote address ähnelt.
        /// </summary>
        public static string MainWindowListColumnRemoteAddressTitle {
            get {
                return ResourceManager.GetString("MainWindowListColumnRemoteAddressTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Username ähnelt.
        /// </summary>
        public static string MainWindowListColumnUserNameTitle {
            get {
                return ResourceManager.GetString("MainWindowListColumnUserNameTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die _About ähnelt.
        /// </summary>
        public static string MainWindowMenuAboutTitle {
            get {
                return ResourceManager.GetString("MainWindowMenuAboutTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die _Add ähnelt.
        /// </summary>
        public static string MainWindowMenuAddDriveTitle {
            get {
                return ResourceManager.GetString("MainWindowMenuAddDriveTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die _Application ähnelt.
        /// </summary>
        public static string MainWindowMenuApplicationTitle {
            get {
                return ResourceManager.GetString("MainWindowMenuApplicationTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die _Check for updates ähnelt.
        /// </summary>
        public static string MainWindowMenuCheckForUpdatesTitle {
            get {
                return ResourceManager.GetString("MainWindowMenuCheckForUpdatesTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die _Close ähnelt.
        /// </summary>
        public static string MainWindowMenuCloseTitle {
            get {
                return ResourceManager.GetString("MainWindowMenuCloseTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die (Re)_Connect all ähnelt.
        /// </summary>
        public static string MainWindowMenuConnectAllTitle {
            get {
                return ResourceManager.GetString("MainWindowMenuConnectAllTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die _Connecting ähnelt.
        /// </summary>
        public static string MainWindowMenuConnectingTitle {
            get {
                return ResourceManager.GetString("MainWindowMenuConnectingTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die _Connect selected ähnelt.
        /// </summary>
        public static string MainWindowMenuConnectSelectedTitle {
            get {
                return ResourceManager.GetString("MainWindowMenuConnectSelectedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die _Disconnect all ähnelt.
        /// </summary>
        public static string MainWindowMenuDisconnectAllTitle {
            get {
                return ResourceManager.GetString("MainWindowMenuDisconnectAllTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die _Disconnect selected ähnelt.
        /// </summary>
        public static string MainWindowMenuDisconnectSelectedTitle {
            get {
                return ResourceManager.GetString("MainWindowMenuDisconnectSelectedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die _Drives ähnelt.
        /// </summary>
        public static string MainWindowMenuDrivesTitle {
            get {
                return ResourceManager.GetString("MainWindowMenuDrivesTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die _Edit ähnelt.
        /// </summary>
        public static string MainWindowMenuEditDriveTitle {
            get {
                return ResourceManager.GetString("MainWindowMenuEditDriveTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die E_xport all ähnelt.
        /// </summary>
        public static string MainWindowMenuExportAllTitle {
            get {
                return ResourceManager.GetString("MainWindowMenuExportAllTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die E_xport selected ähnelt.
        /// </summary>
        public static string MainWindowMenuExportSelectedTitle {
            get {
                return ResourceManager.GetString("MainWindowMenuExportSelectedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die _Import ähnelt.
        /// </summary>
        public static string MainWindowMenuImportTitle {
            get {
                return ResourceManager.GetString("MainWindowMenuImportTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die License information ähnelt.
        /// </summary>
        public static string MainWindowMenuLicenseInfoTitle {
            get {
                return ResourceManager.GetString("MainWindowMenuLicenseInfoTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die _Options ähnelt.
        /// </summary>
        public static string MainWindowMenuOptionsTitle {
            get {
                return ResourceManager.GetString("MainWindowMenuOptionsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die _Remove ähnelt.
        /// </summary>
        public static string MainWindowMenuRemoveDriveTitle {
            get {
                return ResourceManager.GetString("MainWindowMenuRemoveDriveTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Restart WebClient service ähnelt.
        /// </summary>
        public static string MainWindowMenuRestartWebClientTitle {
            get {
                return ResourceManager.GetString("MainWindowMenuRestartWebClientTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Network Drives ähnelt.
        /// </summary>
        public static string MainWindowNetworkDrivesGroupTitle {
            get {
                return ResourceManager.GetString("MainWindowNetworkDrivesGroupTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Not all drives could be removed. ähnelt.
        /// </summary>
        public static string MainWindowNotAllDrivesRemovedMessage {
            get {
                return ResourceManager.GetString("MainWindowNotAllDrivesRemovedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Do you really want to remove the following drives? ähnelt.
        /// </summary>
        public static string MainWindowRemoveDrivesMessage {
            get {
                return ResourceManager.GetString("MainWindowRemoveDrivesMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Removing drives drives... ähnelt.
        /// </summary>
        public static string MainWindowRemoveDrivesProgressMessage {
            get {
                return ResourceManager.GetString("MainWindowRemoveDrivesProgressMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove network drives ähnelt.
        /// </summary>
        public static string MainWindowRemoveDriveTitle {
            get {
                return ResourceManager.GetString("MainWindowRemoveDriveTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {APPNAME} ({0}) ähnelt.
        /// </summary>
        public static string MainWindowTitleBrandable {
            get {
                return ResourceManager.GetString("MainWindowTitleBrandable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The expiration date of the application is exceeded. Please connect to the internet and try again. ähnelt.
        /// </summary>
        public static string MessageApplicationExpiredBrandable {
            get {
                return ResourceManager.GetString("MessageApplicationExpiredBrandable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot add a new network drive while there are no drive letters available. ähnelt.
        /// </summary>
        public static string MessageCannotAddNoDriveLetters {
            get {
                return ResourceManager.GetString("MessageCannotAddNoDriveLetters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The connection could not be established. Please check your network connection and connect the drive manually in the main window. ähnelt.
        /// </summary>
        public static string MessageConnectFailedAfterCheck {
            get {
                return ResourceManager.GetString("MessageConnectFailedAfterCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Connection successfull. ähnelt.
        /// </summary>
        public static string MessageConnectionSuccessfull {
            get {
                return ResourceManager.GetString("MessageConnectionSuccessfull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Could not connect network drive &quot;{0}&quot;:
        ///
        ///{1} ähnelt.
        /// </summary>
        public static string MessageCouldNotConnect {
            get {
                return ResourceManager.GetString("MessageCouldNotConnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disconnect all network drives? ähnelt.
        /// </summary>
        public static string MessageDisconnectAllNetworkDrives {
            get {
                return ResourceManager.GetString("MessageDisconnectAllNetworkDrives", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Fatal Error ({0}): {1}
        ///
        ///{2} ähnelt.
        /// </summary>
        public static string MessageFatalError {
            get {
                return ResourceManager.GetString("MessageFatalError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unhandled Exception ({0}): {1} ähnelt.
        /// </summary>
        public static string MessageGenericError {
            get {
                return ResourceManager.GetString("MessageGenericError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unhandled Exception in {0} ({1}): {2} ähnelt.
        /// </summary>
        public static string MessageGenericErrorSource {
            get {
                return ResourceManager.GetString("MessageGenericErrorSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unhandled Exception in {0} ({1}): {2}
        ///
        ///{3} ähnelt.
        /// </summary>
        public static string MessageGenericErrorSourceAndStackTrace {
            get {
                return ResourceManager.GetString("MessageGenericErrorSourceAndStackTrace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Not all drives could be imported because there are no more drive letters available. ähnelt.
        /// </summary>
        public static string MessageImportFailedNoDriveLetters {
            get {
                return ResourceManager.GetString("MessageImportFailedNoDriveLetters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Initializing application... ähnelt.
        /// </summary>
        public static string MessageInitialization {
            get {
                return ResourceManager.GetString("MessageInitialization", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your license has expired or is not valid anymore. ähnelt.
        /// </summary>
        public static string MessageLicenseExpired {
            get {
                return ResourceManager.GetString("MessageLicenseExpired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your license is valid and allows access to the following domains:
        ///
        ///{0} ähnelt.
        /// </summary>
        public static string MessageLicenseValid {
            get {
                return ResourceManager.GetString("MessageLicenseValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your license is valid up to {0} and allows access to the following domains:
        ///
        ///{1} ähnelt.
        /// </summary>
        public static string MessageLicenseValidWithDate {
            get {
                return ResourceManager.GetString("MessageLicenseValidWithDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your network drive storage file is corrupt and needs to be reconfigured. ähnelt.
        /// </summary>
        public static string MessageNetworkDriveStorageCorrupted {
            get {
                return ResourceManager.GetString("MessageNetworkDriveStorageCorrupted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No authorized domains are available. Please connect to the internet and try again. ähnelt.
        /// </summary>
        public static string MessageNoAuthorizedDomains {
            get {
                return ResourceManager.GetString("MessageNoAuthorizedDomains", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Not all connections could be restored. ähnelt.
        /// </summary>
        public static string MessageNotAllDrivesRestored {
            get {
                return ResourceManager.GetString("MessageNotAllDrivesRestored", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The passwords do not match. ähnelt.
        /// </summary>
        public static string MessagePasswordsDoNotMatch {
            get {
                return ResourceManager.GetString("MessagePasswordsDoNotMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Another drive with the same remote address already exists. ähnelt.
        /// </summary>
        public static string MessageRemoteAddressAlreadyInUse {
            get {
                return ResourceManager.GetString("MessageRemoteAddressAlreadyInUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This will reset all open connections and might lead to data loss. Please make sure you have no active file operations. Continue? ähnelt.
        /// </summary>
        public static string MessageRestartWebClient {
            get {
                return ResourceManager.GetString("MessageRestartWebClient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unable to execute command. ähnelt.
        /// </summary>
        public static string MessageRunElevatedFailed {
            get {
                return ResourceManager.GetString("MessageRunElevatedFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die For all changes to take effect you need to restart {APPNAME}.
        ///
        ///Do you want to restart now? ähnelt.
        /// </summary>
        public static string MessageSettingsRestartRequiredBrandable {
            get {
                return ResourceManager.GetString("MessageSettingsRestartRequiredBrandable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check connection ähnelt.
        /// </summary>
        public static string MessageTitleCheckConnection {
            get {
                return ResourceManager.GetString("MessageTitleCheckConnection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A fatal error occured. Please check the log file of {APPNAME}. ähnelt.
        /// </summary>
        public static string MessageUnhandledExceptionBrandable {
            get {
                return ResourceManager.GetString("MessageUnhandledExceptionBrandable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please wait for the current operation to be finished. ähnelt.
        /// </summary>
        public static string MessageWaitForOperation {
            get {
                return ResourceManager.GetString("MessageWaitForOperation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please wait for the current operation to be finished and close all dialogs. ähnelt.
        /// </summary>
        public static string MessageWaitForOperationAndCloseWindows {
            get {
                return ResourceManager.GetString("MessageWaitForOperationAndCloseWindows", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No ähnelt.
        /// </summary>
        public static string No {
            get {
                return ResourceManager.GetString("No", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die About ähnelt.
        /// </summary>
        public static string NotifyIconAboutTitle {
            get {
                return ResourceManager.GetString("NotifyIconAboutTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {APPNAME} is now running in the background.
        ///
        ///Right-click this icon to open the window. ähnelt.
        /// </summary>
        public static string NotifyIconBackgroundHintTextBrandable {
            get {
                return ResourceManager.GetString("NotifyIconBackgroundHintTextBrandable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die (Re-)Connect all drives ähnelt.
        /// </summary>
        public static string NotifyIconConnectAllDrivesTitle {
            get {
                return ResourceManager.GetString("NotifyIconConnectAllDrivesTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disconnect all drives ähnelt.
        /// </summary>
        public static string NotifyIconDisconnectAllDrivesTitle {
            get {
                return ResourceManager.GetString("NotifyIconDisconnectAllDrivesTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Exit ähnelt.
        /// </summary>
        public static string NotifyIconExitTitle {
            get {
                return ResourceManager.GetString("NotifyIconExitTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show log file ähnelt.
        /// </summary>
        public static string NotifyIconShowLogFile {
            get {
                return ResourceManager.GetString("NotifyIconShowLogFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show main window ähnelt.
        /// </summary>
        public static string NotifyIconShowMainWindowTitle {
            get {
                return ResourceManager.GetString("NotifyIconShowMainWindowTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Open Source Licenses ähnelt.
        /// </summary>
        public static string OpenSourceLicenseWindowTitle {
            get {
                return ResourceManager.GetString("OpenSourceLicenseWindowTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking connection... ähnelt.
        /// </summary>
        public static string ProgressMessageCheckingConnection {
            get {
                return ResourceManager.GetString("ProgressMessageCheckingConnection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Connecting drive {0}... ähnelt.
        /// </summary>
        public static string ProgressMessageConnectingDrive {
            get {
                return ResourceManager.GetString("ProgressMessageConnectingDrive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Connecting drives... ähnelt.
        /// </summary>
        public static string ProgressMessageConnectingDrives {
            get {
                return ResourceManager.GetString("ProgressMessageConnectingDrives", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disconnecting drive {0}... ähnelt.
        /// </summary>
        public static string ProgressMessageDisconnectingDrive {
            get {
                return ResourceManager.GetString("ProgressMessageDisconnectingDrive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disconnecting drives... ähnelt.
        /// </summary>
        public static string ProgressMessageDisconnectingDrives {
            get {
                return ResourceManager.GetString("ProgressMessageDisconnectingDrives", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Allow Beta versions ähnelt.
        /// </summary>
        public static string SettingsWindowAllowBetaTitle {
            get {
                return ResourceManager.GetString("SettingsWindowAllowBetaTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Application ähnelt.
        /// </summary>
        public static string SettingsWindowApplicationGroupTitle {
            get {
                return ResourceManager.GetString("SettingsWindowApplicationGroupTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start {APPNAME} after user login ähnelt.
        /// </summary>
        public static string SettingsWindowAutoStartTitleBrandable {
            get {
                return ResourceManager.GetString("SettingsWindowAutoStartTitleBrandable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check for updates at startup ähnelt.
        /// </summary>
        public static string SettingsWindowAutoUpdateTitle {
            get {
                return ResourceManager.GetString("SettingsWindowAutoUpdateTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die English ähnelt.
        /// </summary>
        public static string SettingsWindowLanguageEnglish {
            get {
                return ResourceManager.GetString("SettingsWindowLanguageEnglish", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die German ähnelt.
        /// </summary>
        public static string SettingsWindowLanguageGerman {
            get {
                return ResourceManager.GetString("SettingsWindowLanguageGerman", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die System default ähnelt.
        /// </summary>
        public static string SettingsWindowLanguageSystemDefault {
            get {
                return ResourceManager.GetString("SettingsWindowLanguageSystemDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Language ähnelt.
        /// </summary>
        public static string SettingsWindowLanguageTitle {
            get {
                return ResourceManager.GetString("SettingsWindowLanguageTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error loading configuration ({0}): {1}
        ///
        ///{2} ähnelt.
        /// </summary>
        public static string SettingsWindowLoadErrorMessage {
            get {
                return ResourceManager.GetString("SettingsWindowLoadErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Microsoft Office ähnelt.
        /// </summary>
        public static string SettingsWindowOfficeGroupTitle {
            get {
                return ResourceManager.GetString("SettingsWindowOfficeGroupTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Microsoft Office (Not installed) ähnelt.
        /// </summary>
        public static string SettingsWindowOfficeNotInstalledGroupTitle {
            get {
                return ResourceManager.GetString("SettingsWindowOfficeNotInstalledGroupTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Only reconnect at startup connected drives ähnelt.
        /// </summary>
        public static string SettingsWindowOnlyReconnectActiveDrives {
            get {
                return ResourceManager.GetString("SettingsWindowOnlyReconnectActiveDrives", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Excel: Disable Protected View ähnelt.
        /// </summary>
        public static string SettingsWindowPvExcelTitle {
            get {
                return ResourceManager.GetString("SettingsWindowPvExcelTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die PowerPoint: Disable Protected View ähnelt.
        /// </summary>
        public static string SettingsWindowPvPowerPointTitle {
            get {
                return ResourceManager.GetString("SettingsWindowPvPowerPointTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Word: Disable Protected View ähnelt.
        /// </summary>
        public static string SettingsWindowPvWordTitle {
            get {
                return ResourceManager.GetString("SettingsWindowPvWordTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error saving configuration ({0}): {1}
        ///
        ///{2} ähnelt.
        /// </summary>
        public static string SettingsWindowSaveErrorMessage {
            get {
                return ResourceManager.GetString("SettingsWindowSaveErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {APPNAME} Settings ähnelt.
        /// </summary>
        public static string SettingsWindowTitleBrandable {
            get {
                return ResourceManager.GetString("SettingsWindowTitleBrandable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show Licenses ähnelt.
        /// </summary>
        public static string ShowLicenses {
            get {
                return ResourceManager.GetString("ShowLicenses", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check connection ähnelt.
        /// </summary>
        public static string TitleCheckConnection {
            get {
                return ResourceManager.GetString("TitleCheckConnection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You can use environment variables like %USERNAME% here. ähnelt.
        /// </summary>
        public static string ToolTipEnvironmentVariables {
            get {
                return ResourceManager.GetString("ToolTipEnvironmentVariables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Access to the path denied. ähnelt.
        /// </summary>
        public static string WNetErrorAccessDenied {
            get {
                return ResourceManager.GetString("WNetErrorAccessDenied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Username or password wrong. ähnelt.
        /// </summary>
        public static string WNetErrorAuthorizationFailed {
            get {
                return ResourceManager.GetString("WNetErrorAuthorizationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The operation was canceled by the user. ähnelt.
        /// </summary>
        public static string WNetErrorCanceledByUser {
            get {
                return ResourceManager.GetString("WNetErrorCanceledByUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The drive letter is already in use. ähnelt.
        /// </summary>
        public static string WNetErrorDriveLetterInUse {
            get {
                return ResourceManager.GetString("WNetErrorDriveLetterInUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The connection conflicts with a local configuration. This mostly happens when the drive letter is already in use or you have entered different credentials for the domain in another connection. ähnelt.
        /// </summary>
        public static string WNetErrorLocalConflict {
            get {
                return ResourceManager.GetString("WNetErrorLocalConflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No additional information supplied ähnelt.
        /// </summary>
        public static string WNetErrorNoInformation {
            get {
                return ResourceManager.GetString("WNetErrorNoInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No network connections available. ähnelt.
        /// </summary>
        public static string WNetErrorNoNetwork {
            get {
                return ResourceManager.GetString("WNetErrorNoNetwork", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This type of network resource is not supported. ähnelt.
        /// </summary>
        public static string WNetErrorNotSupported {
            get {
                return ResourceManager.GetString("WNetErrorNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The network path was not found. ähnelt.
        /// </summary>
        public static string WNetErrorPathNotFound {
            get {
                return ResourceManager.GetString("WNetErrorPathNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The given resource is currently beeing used. ähnelt.
        /// </summary>
        public static string WNetErrorResourceBusy {
            get {
                return ResourceManager.GetString("WNetErrorResourceBusy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die An unknown error has occured. Please check your input and network connection and try it again. ähnelt.
        /// </summary>
        public static string WNetErrorUnknownError {
            get {
                return ResourceManager.GetString("WNetErrorUnknownError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error code {0} occured. Please try again later or contact your local IT support. ähnelt.
        /// </summary>
        public static string WNetErrorWithCode {
            get {
                return ResourceManager.GetString("WNetErrorWithCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Yes ähnelt.
        /// </summary>
        public static string Yes {
            get {
                return ResourceManager.GetString("Yes", resourceCulture);
            }
        }
    }
}
